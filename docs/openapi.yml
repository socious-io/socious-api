openapi: 3.0.0
info:
  title: Socious-API
  version: 2.1.2
servers:
  - url: https://dev.socious.io/api/v2/
  - url: http://localhost:8370
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
  schemas:
    project-status:
      type: string
      enum:
        - DRAFT
        - ACTIVE
        - EXPIRE
    language-level:
      type: string
      enum:
        - BASIC
        - CONVERSANT
        - PROFICIENT
        - FLUENT
        - NATIVE
paths:
  /auth/login:
    post:
      tags:
        - auth
      summary: login
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                email: '{{user_login}}'
                password: '{{user_password}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /auth/register:
    post:
      tags:
        - auth
      summary: register
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                first_name: Ehsan
                last_name: Mahmoudi
                username: socious2022
                password: socious2022
                email: info_2022@socious.io
      parameters:
        - name: RefreshToken
          in: header
          schema:
            type: string
          example: '{{refresh_token}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /auth/preregister:
    post:
      tags:
        - auth
      summary: preregister
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                username: socious
                email: info@socious.io
      responses:
        '200':
          description: OK
          headers:
            Vary:
              schema:
                type: string
                example: Origin
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '30'
            Date:
              schema:
                type: string
                example: Fri, 19 Aug 2022 17:20:05 GMT
            Connection:
              schema:
                type: string
                example: keep-alive
            Keep-Alive:
              schema:
                type: string
                example: timeout=5
          content:
            application/json:
              schema:
                type: object
              examples:
                example-0:
                  summary: preregister (all ok)
                  value:
                    username: null
                    email: null
                example-1:
                  summary: preregister (email only)
                  value:
                    email: null
                example-2:
                  summary: preregister (both invalid)
                  value:
                    username: '"username" with value "socious team" fails to match the required pattern: /^(?=.{6,20}$)(?![_.])(?!.*[_.]{2})[a-zA-Z0-9._]+(?<![_.])$/'
                    email: '"email" must be a valid email'
                example-3:
                  summary: preregister (mix of invalid and existing)
                  value:
                    username: '"username" with value "socious team" fails to match the required pattern: /^(?=.{6,20}$)(?![_.])(?!.*[_.]{2})[a-zA-Z0-9._]+(?<![_.])$/'
                    email: EXISTS
  /auth/otp:
    post:
      tags:
        - auth
      summary: send otp
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                email: '{{user_login}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /auth/otp/confirm:
    get:
      tags:
        - auth
      summary: confirm otp
      parameters:
        - name: code
          in: query
          schema:
            type: integer
          example: '207364'
        - name: email
          in: query
          schema:
            type: string
          example: info@socious.io
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /auth/forget-password:
    post:
      tags:
        - auth
      summary: forget password
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                email: '{{user_login}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /auth/refresh:
    post:
      tags:
        - auth
      summary: refresh token
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                refresh_token: '{{refresh_token}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects:
    get:
      tags:
        - project
      summary: get all
      parameters:
        - name: identity
          in: query
          schema:
            type: string
          description: uuid of organization to filter
          example: 2bd26aa5-f745-4f12-bca7-17916161ae8b
        - name: status
          in: query
          schema:
            type: array
            items:
              $ref: '#/components/schemas/project-status'
            default: ACTIVE
          description: statuses to filter for
          example: ACTIVE
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - project
      summary: create
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                description: Data testing
                experience_level: 1
                payment_range_higher: '13'
                payment_range_lower: '12'
                payment_scheme: FIXED
                payment_type: VOLUNTEER
                remote_preference: HYBRID
                social_causes:
                  - SOCIAL
                  - POVERTY
                status: ACTIVE
                title: Testing
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/update/{project_id}:
    post:
      tags:
        - project
      summary: update
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                causes_tags:
                  - SOCIAL
                country: AL
                created_at: '2022-09-05T17:19:25.501Z'
                deleted_at: null
                description: Structure dsdsd
                experience_level: 1
                expires_at: null
                id: af8f8687-3cc9-49db-8231-4636cfb9a3a5
                identity_id: ebd02a72-f530-4d18-9a72-d7aa9ace1271
                old_id: null
                passions:
                  - SOCIAL
                payment_currency: null
                payment_range_higher: '13'
                payment_range_lower: '12'
                payment_scheme: HOURLY
                payment_type: PAID
                project_length: LESS_THAN_A_DAY
                project_type: PART_TIME
                remote_preference: HYBRID
                skills:
                  - ANGULARJS
                  - CSS
                  - AWS
                status: ACTIVE
                title: 'Sdsdsd Demo New '
                updated_at: '2022-09-05T17:19:25.501Z'
      security:
        - bearerAuth: []
      parameters:
        - name: project_id
          in: path
          schema:
            type: string
          required: true
        - name: Current-Identity
          in: header
          schema:
            type: string
          example: ebd02a72-f530-4d18-9a72-d7aa9ace1271
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{project_id}:
    get:
      tags:
        - project
      summary: get
      security:
        - bearerAuth: []
      parameters:
        - name: project_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{project_id}/applicants:
    parameters:
      - name: project_id
        in: path
        schema:
          type: string
        required: true
    get:
      tags:
        - project
      summary: get applicants
      security:
        - bearerAuth: []
      parameters:
        - name: project_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - project
      summary: apply
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                cover_letter: test text
                cv_link: http://test.com/cv.pdf
                cv_name: test text
                share_contact_info: true
                answers:
                  - id: 3fcc4216-0d0a-412d-9747-494e4dc8e53f
                    answer: 'yes'
                  - id: 7b9df588-50b2-4896-b343-b9f99c9b7ee1
                    selected_option: 1
                    answer: 'yes'
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{project_id}/employees:
    get:
      tags:
        - project
      summary: get employees
      security:
        - bearerAuth: []
      parameters:
        - name: project_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{project_id}/feedbacks:
    get:
      tags:
        - project
      summary: get feedbacks
      security:
        - bearerAuth: []
      parameters:
        - name: project_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /projects/{project_id}/questions:
    post:
      tags:
        - project
      summary: add question
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                question: are you OK ?
                required: false
                options:
                  - 'yes'
                  - 'no'
      security:
        - bearerAuth: []
      parameters:
        - name: project_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}

  /applicants/{applicant_id}/offer:
    parameters:
      - name: applicant_id
        in: path
        schema:
          type: string
        required: true
    post:
      tags:
        - project
      summary: project applicatons
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                offer_text: test offer text
                offer_rate: 500$
                due_date: '2022-08-12T11:38:03.40'
                assignment_total: 5
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /applicants/{applicant_id}:
    parameters:
      - name: applicant_id
        in: path
        schema:
          type: string
        required: true
    get:
      tags:
        - project
      summary: get applicant
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /chats:
    get:
      tags:
        - chat
      summary: all
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - chat
      summary: create
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: test
                description: test
                type: CHAT
                participants:
                  - bec6c278-52ea-45c6-86b8-67a711f40a00
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /chats/summary:
    get:
      tags:
        - chat
      summary: summary
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /chats/{id}:
    parameters:
      - name: id
        in: path
        schema:
          type: string
        required: true
    get:
      tags:
        - chat
      summary: get
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /chats/update/{id}:
    parameters:
      - name: id
        in: path
        schema:
          type: string
        required: true
    post:
      tags:
        - chat
      summary: update
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: test1
                description: test
                type: CHAT
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /chats/find:
    post:
      tags:
        - chat
      summary: find
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                participants:
                  - 311fca4c-057d-4752-9e7c-b985ff1c5294
      security:
        - bearerAuth: []
      parameters:
        - name: CurrentIdentity
          in: header
          schema:
            type: string
          example: d3c7223f-8ae6-4e16-9cbf-66b128dc5b74
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /chats/{chat_id}/participants:
    get:
      tags:
        - chat
      summary: participants
      security:
        - bearerAuth: []
      parameters:
        - name: chat_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /chats/{chat_id}/messages:
    parameters:
      - name: chat_id
        in: path
        schema:
          type: string
        required: true
    get:
      tags:
        - chat
      summary: messages
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - chat
      summary: new message
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                text: testttt
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /chats/{chat_id}/messages/{message_id}:
    parameters:
      - name: chat_id
        in: path
        schema:
          type: string
        required: true
      - name: message_id
        in: path
        schema:
          type: string
        required: true
    post:
      tags:
        - chat
      summary: reply message
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                text: testttt reply
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - chat
      summary: replied messages
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /chats/update/{chat_id}/messages/{message_id}:
    parameters:
      - name: chat_id
        in: path
        schema:
          type: string
        required: true
      - name: message_id
        in: path
        schema:
          type: string
        required: true
    post:
      tags:
        - chat
      summary: edit messages
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                text: testttt edited
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /chats/remove/{chat_id}/messages/{message_id}:
    parameters:
      - name: chat_id
        in: path
        schema:
          type: string
        required: true
      - name: message_id
        in: path
        schema:
          type: string
        required: true
    post:
      tags:
        - chat
      summary: remove messages
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /chats/update/{chat_id}/messages/{message_id}/read:
    post:
      tags:
        - chat
      summary: read messages
      requestBody:
        content: {}
      security:
        - bearerAuth: []
      parameters:
        - name: chat_id
          in: path
          schema:
            type: string
          required: true
        - name: message_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /posts:
    post:
      tags:
        - post
      summary: create
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                content: content
                causes_tags:
                  - SOCIAL
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - post
      summary: all
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /posts/{post_id}:
    parameters:
      - name: post_id
        in: path
        schema:
          type: string
        required: true
    get:
      tags:
        - post
      summary: get
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /posts/remove/{post_id}:
    parameters:
      - name: post_id
        in: path
        schema:
          type: string
        required: true
    post:
      tags:
        - post
      summary: delete
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /posts/update/{post_id}:
    parameters:
      - name: post_id
        in: path
        schema:
          type: string
        required: true
    post:
      tags:
        - post
      summary: update
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                content: content2
                causes_tags:
                  - SOCIAL
                  - HEALTH
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /posts/comments/{comment_id}:
    parameters:
      - name: comment_id
        in: path
        schema:
          type: string
        required: true
    get:
      tags:
        - post
      summary: replies
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /posts/{post_id}/comments:
    parameters:
      - name: post_id
        in: path
        schema:
          type: string
        required: true
    get:
      tags:
        - post
      summary: comments
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - post
      summary: new comment
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: |-
                {
                    "content": "comment reply",
                    
                }
      security:
        - bearerAuth: []
      parameters:
        - name: Current-Identity
          in: header
          schema:
            type: string
          example: ebd02a72-f530-4d18-9a72-d7aa9ace1271
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /posts/{post_id}/comments/{comment_id}/like:
    parameters:
      - name: post_id
        in: path
        schema:
          type: string
        required: true
      - name: comment_id
        in: path
        schema:
          type: string
        required: true
    post:
      tags:
        - post
      summary: like comment
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                content: comment reply
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /posts/{post_id}/comments/{comment_id}/unlike:
    parameters:
      - name: post_id
        in: path
        schema:
          type: string
        required: true
      - name: comment_id
        in: path
        schema:
          type: string
        required: true
    post:
      tags:
        - post
      summary: unlike comment
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /posts/comments/remove/{comment_id}:
    parameters:
      - name: comment_id
        in: path
        schema:
          type: string
        required: true
    post:
      tags:
        - post
      summary: delete comment
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /posts/{post_id}/like:
    parameters:
      - name: post_id
        in: path
        schema:
          type: string
        required: true
    post:
      tags:
        - post
      summary: like
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                content: content
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /posts/{post_id}/unlike:
    parameters:
      - name: post_id
        in: path
        schema:
          type: string
        required: true
    post:
      tags:
        - post
      summary: unlike
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                content: content
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /posts/{post_id}/share:
    parameters:
      - name: post_id
        in: path
        schema:
          type: string
        required: true
    post:
      tags:
        - post
      summary: share
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                content: content
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /orgs:
    post:
      tags:
        - organizations
      summary: create
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: test ORG
                email: info@socious.io
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - organizations
      summary: all
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /orgs/{org_id}:
    parameters:
      - name: org_id
        in: path
        schema:
          type: string
        required: true
    get:
      tags:
        - organizations
      summary: get
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /orgs/update/{org_id}:
    parameters:
      - name: org_id
        in: path
        schema:
          type: string
        required: true
    post:
      tags:
        - organizations
      summary: update
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                address: San Crispin
                bio: Lets beat childhood cancer
                city: San Pablo City
                country: AL
                description: San Pablo City, Laguna, Philippines
                email: jayson.vergara.ilagan@gmail.com
                mission: Asasas
                mobile_country_code: '+81'
                name: Beat childhood cancer
                phone: '9171260643'
                social_causes:
                  - SOCIAL
                website: https://asasas.com
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /orgs/{org_id}/members:
    parameters:
      - name: org_id
        in: path
        schema:
          type: string
        required: true
    get:
      tags:
        - organizations
      summary: members
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /orgs/{org_id}/members/{user_id}:
    parameters:
      - name: org_id
        in: path
        schema:
          type: string
        required: true
      - name: user_id
        in: path
        schema:
          type: string
        required: true
    post:
      tags:
        - organizations
      summary: add member
      requestBody:
        content: {}
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /orgs/remove/{org_id}/members/{user_id}:
    parameters:
      - name: org_id
        in: path
        schema:
          type: string
        required: true
      - name: user_id
        in: path
        schema:
          type: string
        required: true
    post:
      tags:
        - organizations
      summary: delete member
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /user/profile:
    get:
      tags:
        - users
      summary: profile
      security:
        - bearerAuth: []
      parameters:
        - name: Current-Identity
          in: header
          schema:
            type: string
          example: 311fca4c-057d-4752-9e7c-b985ff1c5294
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /user/update/profile:
    post:
      tags:
        - users
      summary: update profile
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                bio: I’m looking right now through the code. typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more re dfsdfgdfg Dfg
                city: San Pablo City
                country: PH
                first_name: Jayson
                last_name: Ilagan
                mission: Hdhshsh
                mobile_country_code: '+63'
                phone: '5464542'
                skills:
                  - ANGULARJS
                  - JAVASCRIPT
                  - NODE.JS
                  - REACT.JS
                  - REACT_NATIVE
                social_causes:
                  - POVERTY
                  - HEALTH
                  - CHILD_PROTECTION
                  - ANIMAL_RIGHTS
                  - DEMOCRACY
                username: socious2022
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /user/languages:
    post:
      tags:
        - users
      summary: add user language
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: FA
                level: NATIVE
              properties:
                level:
                  $ref: '#/components/schemas/language-level'
                name:
                  type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /user/languages/update/{language_id}:
    parameters:
      - name: language_id
        in: path
        schema:
          type: string
        required: true
    post:
      tags:
        - users
      summary: update user language
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: EN
                level: PROFICIENT
              properties:
                level:
                  $ref: '#/components/schemas/language-level'
                name:
                  type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /user/languages/remove/{language_id}:
    parameters:
      - name: language_id
        in: path
        schema:
          type: string
        required: true
    post:
      tags:
        - users
      summary: remove user language
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /user/experiences:
    post:
      tags:
        - users
      summary: add user experience
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                org_id: 0bf22f38-0c18-4762-9af8-9f36960af8cd,
                title: Test,
                description: Test,
                start_at: 2021-10-16T13:32:30.211Z,
                end_at: 2022-10-16T13:32:30.211Z,
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /user/experiences/update/{experience_id}:
    parameters:
      - name: experience_id
        in: path
        schema:
          type: string
        required: true
    post:
      tags:
        - users
      summary: update user experience
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                org_id: 0bf22f38-0c18-4762-9af8-9f36960af8cd,
                title: Test,
                description: Test,
                start_at: 2021-10-16T13:32:30.211Z,
                end_at: 2022-10-16T13:32:30.211Z,
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /user/experiences/remove/{experience_id}:
    parameters:
      - name: experience_id
        in: path
        schema:
          type: string
        required: true
    post:
      tags:
        - users
      summary: remove user experience
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /user/change-password:
    post:
      tags:
        - users
      summary: change password
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                current_password: socious2022
                password: socious2023
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /user/change-password-direct:
    post:
      tags:
        - users
      summary: change password direct
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                password: socious2022
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /user/delete:
    post:
      tags:
        - users
      summary: delete
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                reason: test
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /user/{user_id}/profile:
    parameters:
      - name: user_id
        in: path
        schema:
          type: string
        required: true
    get:
      tags:
        - users
      summary: other user profile
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /user/by-username/{username}/profile:
    parameters:
      - name: username
        in: path
        schema:
          type: string
        example: seira-yun8611
        required: true
    get:
      tags:
        - users
      summary: other profile by username
      security:
        - bearerAuth: []
      parameters:
        - name: Current-Identity
          in: header
          schema:
            type: string
          example: 311fca4c-057d-4752-9e7c-b985ff1c5294
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /user/applicants:
    get:
      tags:
        - users
      summary: get user applicants
      security:
        - bearerAuth: []
      parameters:
        - name: Current-Identity
          in: header
          schema:
            type: string
          example: 311fca4c-057d-4752-9e7c-b985ff1c5294
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /user/employed:
    get:
      tags:
        - users
      summary: get user emplyeds
      security:
        - bearerAuth: []
      parameters:
        - name: Current-Identity
          in: header
          schema:
            type: string
          example: 311fca4c-057d-4752-9e7c-b985ff1c5294
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /identities:
    get:
      tags:
        - identity
      summary: current
      security:
        - bearerAuth: []
      parameters:
        - name: Current-Identity
          in: header
          schema:
            type: string
          example: 311fca4c-057d-4752-9e7c-b985ff1c5294
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /identities/{identity_id}:
    parameters:
      - name: identity_id
        in: path
        schema:
          type: string
        required: true
    get:
      tags:
        - identity
      summary: get
      security:
        - bearerAuth: []
      parameters:
        - name: CurrentIdentity
          in: header
          schema:
            type: string
          example: 2e67a3e9-7d0f-41fe-8039-38fb6928ab0c
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /identities/set/{identity_id}/session:
    parameters:
      - name: identity_id
        in: path
        schema:
          type: string
        required: true
    get:
      tags:
        - identity
      summary: set identity session
      security:
        - bearerAuth: []
      parameters:
        - name: Current-Identity
          in: header
          schema:
            type: string
          example: 311fca4c-057d-4752-9e7c-b985ff1c5294
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /devices:
    post:
      tags:
        - device
      summary: add
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                token: cVuYlI65SsKSH17MYEqFYi:APA91bHMxZef0CcL8oKVCRND1SONhaduVCGYOUGI8V9bwzhBzn8I3djhb0vpTmsB_zpLCcpJv8tLhV_Y6dUGNn1tUrQmuT5-MX3HjLOs7by119CeCtMvZEFleWs0881_jAIlOsZNJ80p
                meta:
                  os: ANDROID
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - device
      summary: get
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /devices/update:
    post:
      tags:
        - device
      summary: update meta data
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                token: cVuYlI65SsKSH17MYEqFYi:APA91bHMxZef0CcL8oKVCRND1SONhaduVCGYOUGI8V9bwzhBzn8I3djhb0vpTmsB_zpLCcpJv8tLhV_Y6dUGNn1tUrQmuT5-MX3HjLOs7by119CeCtMvZEFleWs0881_jAIlOsZNJ80p
                meta:
                  os: ANDROID
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /devices/remove/{token}:
    parameters:
      - name: token
        in: path
        schema:
          type: string
        required: true
        example: cVuYlI65SsKSH17MYEqFYi:APA91bHMxZef0CcL8oKVCRND1SONhaduVCGYOUGI8V9bwzhBzn8I3djhb0vpTmsB_zpLCcpJv8tLhV_Y6dUGNn1tUrQmuT5-MX3HjLOs7by119CeCtMvZEFleWs0881_jAIlOsZNJ80p
    post:
      tags:
        - device
      summary: remove token
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /follows/{identity_id}:
    parameters:
      - name: identity_id
        in: path
        schema:
          type: string
        required: true
    post:
      tags:
        - follows
      summary: follow
      requestBody:
        content: {}
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /follows/{identity_id}/unfollow:
    parameters:
      - name: identity_id
        in: path
        schema:
          type: string
        required: true
    post:
      tags:
        - follows
      summary: unfollow
      requestBody:
        content: {}
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /follows/followings:
    get:
      tags:
        - follows
      summary: followings
      security:
        - bearerAuth: []
      parameters:
        - name: Current-Identity
          in: header
          schema:
            type: string
          example: c8765d15-030d-4ebc-a493-9265c0911f16
        - name: name
          in: query
          schema:
            type: string
          example: test
        - name: type
          in: query
          schema:
            type: string
          example: organizations
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /follows/followers:
    get:
      tags:
        - follows
      summary: followers
      security:
        - bearerAuth: []
      parameters:
        - name: Current-Identity
          in: header
          schema:
            type: string
          example: c8765d15-030d-4ebc-a493-9265c0911f16
        - name: name
          in: query
          schema:
            type: string
          example: test
        - name: type
          in: query
          schema:
            type: string
          example: organizations
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /search:
    post:
      tags:
        - search
      summary: search
      description: filtering format would be like mongo objects with ('eq', 'ne', 'gt', 'gte', 'lt', 'lte') for array columns only 'eq' would be available for clarify filters operator stand for (equal, not equal, greater, greater equal, little, little equal) as example we may not use any of them it wiyld be default equal operator. columns for each type would be projects = ['country', 'causes_tags', 'skills', 'payment_type', 'payment_scheme', 'status'] posts = ['causes_tags', 'hashtags'] users,related_users = ['country', 'social_causes', 'skills'] organizations = ['country', 'type', 'social_causes']
      requestBody:
        content:
          application/json:
            schema:
              type: object
            example:
              q: search q
              type: projects
              filter:
                causes_tags:
                  - SOCIAL
                status:
                  ne: ACTIVE
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /search/history:
    get:
      tags:
        - search
      summary: current user search history
      parameters:
        - name: Current-Identity
          in: header
          schema:
            type: string
          example: c8765d15-030d-4ebc-a493-9265c0911f16
        - name: limit
          in: query
          schema:
            type: number
          example: 100
        - name: page
          in: query
          schema:
            type: number
          example: 1
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /media/upload:
    post:
      tags:
        - media
      summary: upload
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /media/{media_id}:
    parameters:
      - name: media_id
        in: path
        schema:
          type: string
        required: true
    get:
      tags:
        - media
      summary: get media
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}

  /employed/{employee_id}/complete:
    parameters:
      - name: employee_id
        in: path
        schema:
          type: string
        required: true
    post:
      tags:
        - employed
      summary: complete job
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /employed/{employee_id}/confirm:
    parameters:
      - name: employee_id
        in: path
        schema:
          type: string
        required: true
    post:
      tags:
        - employed
      summary: confirm job
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /employed/{employee_id}/cancel:
    parameters:
      - name: employee_id
        in: path
        schema:
          type: string
        required: true
    post:
      tags:
        - employed
      summary: cancel job
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /employed/{employee_id}/kickout:
    parameters:
      - name: employee_id
        in: path
        schema:
          type: string
        required: true
    post:
      tags:
        - employed
      summary: cancel job
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /employed/{employee_id}/feedback:
    parameters:
      - name: employee_id
        in: path
        schema:
          type: string
        required: true
    post:
      tags:
        - employed
      summary: feedback job
      requestBody:
        content:
          application/json:
            schema:
              type: object
            example:
              content: test
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /employed/{employee_id}/contest:
    parameters:
      - name: employee_id
        in: path
        schema:
          type: string
        required: true
    post:
      tags:
        - employed
      summary: contest job
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
